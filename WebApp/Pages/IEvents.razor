@page "/events"

<PageTitle>Events</PageTitle>

@using WebApp.Data
@inject IEventService IEventService

<h1>Events</h1>
Filters:
<input placeholder="category" @bind="categoryFilter" @bind:event="oninput"/>
<input placeholder="title" @bind="titleFilter" @bind:event="oninput"/>
<input placeholder="description" @bind="descriptionFilter" @bind:event="oninput"/>

@if (iEvents == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-sm table-striped">
        <thead>
            <tr>
                <th>Category</th>
                <th>Title</th>
                <th>Description</th>
                <th>Date</th>
                <th>Channel</th>
                <th>Image</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var iEvent in iEvents)
            {
                if (iEvent.Category.ToLower().Contains(categoryFilter.ToLower()) &&
                    iEvent.Title.ToLower().Contains(titleFilter.ToLower()) &&
                    iEvent.Description.ToLower().Contains(descriptionFilter.ToLower()))
                {
                    <tr>
                        <td>@iEvent.Category</td>
                        <td>@iEvent.Title</td>
                        <td>@iEvent.Description</td>
                        <td>@iEvent.Date</td>
                        <td>@iEvent.Channel</td>
                        <td><img src="@iEvent.Image" width="100" height="50"></td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    private string categoryFilter = "";
    private string titleFilter = "";
    private string descriptionFilter = "";
    private List<IEvent> iEvents;

    protected override async Task OnInitializedAsync()
    {
        iEvents = await IEventService.GetIEventsAsync();
    }
}
