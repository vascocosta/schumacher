@page "/"

<PageTitle>Home</PageTitle>

@using WebApp.Data
@using System.Globalization
@inject UserService UserService
@inject IEventService IEventService
@inject BetService BetService

<h1>SCHUMACHER - THE IRC BOT OF THE #FORMULA1 CHANNEL AT QUAKENET</h1>
<br>
@if (users == null || bets == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <marquee width="100%" direction="left" bgcolor="#0080ff" behavior="scroll" style="font-size:2em; color: #ffffff;">
        <b>WBC POINTS: </b>
        @for(int i = 0; i != 20; i++) {
            @(i+1 + ". " + users[i].Nick + " " + users[i].Points + " | ")
        }
    </marquee>
    <br>
    <br>
    <h2>UPCOMING EVENTS:</h2>
    <br>
    <div class="container">
        <div class="row">
            <div class="col-sm">
                <NextEvent category="any" description="any" />
            </div>
            <div class="col-sm">
                <NextEvent category="[Formula 1]" description="qualifying" />
            </div>
            <div class="col-sm">
                <NextEvent category="[Formula 1]" description="race" />
            </div>
        </div>
    </div>
    <h2>LATEST BETS:</h2>
    <table class="table table-sm table-striped">
        <thead>
            <tr>
                <th>Race</th>
                <th>Nick</th>
                <th>Driver 1</th>
                <th>Driver 2</th>
                <th>Drtiver 3</th>
                <th>Points</th>
            </tr>
        </thead>
        <tbody>
            @for(int i = 0; i != 10; i++) {
                <tr>
                    <td>@bets[i].Race</td>
                    <td>@bets[i].Nick</td>
                    <td>@bets[i].Driver1</td>
                    <td>@bets[i].Driver2</td>
                    <td>@bets[i].Driver3</td>
                    <td>@bets[i].Points</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<User> users;
    private List<Bet> bets;

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetUsersAsync();
        users.Sort((x, y) => y.Points.CompareTo(x.Points));
        bets = await BetService.GetBetsAsync();
        bets.Reverse();
    }
}